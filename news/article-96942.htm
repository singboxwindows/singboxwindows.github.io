<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://singboxwindows.github.io/news/article-96942.htm" />
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>vue 内置组件 component 的用法</title>
        <meta name="description" content="component is 内置组件切换方法一： component组件（单独拿出一个组件来专门进行切换使用） 使用is来绑定你的组件：如下面的reviewedPlan&nbsp; planDetail" />
        <link rel="icon" href="/assets/website/img/singboxwindows/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="SingBox Windows免费节点订阅站">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://singboxwindows.github.io/news/article-96942.htm" />
    <meta property="og:site_name" content="SingBox Windows免费节点订阅站" />
    <meta property="og:title" content="vue 内置组件 component 的用法" />
    <meta property="og:image" content="https://singboxwindows.github.io/uploads/20240731/de60afb40763b7b1e7e200baaf4917aa.webp" />
        <meta property="og:release_date" content="2025-04-16T08:37:57" />
    <meta property="og:updated_time" content="2025-04-16T08:37:57" />
        <meta property="og:description" content="component is 内置组件切换方法一： component组件（单独拿出一个组件来专门进行切换使用） 使用is来绑定你的组件：如下面的reviewedPlan&nbsp; planDetail" />
        
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="vue 内置组件 component 的用法">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">

    <link rel="stylesheet" href="/assets/website/css/singboxwindows/app.css">
    <link href="https://fonts.googleapis.com/css?family=Nunito:300,400,500,600,700,800,900&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://maxcdn.icons8.com/fonts/line-awesome/1.1/css/line-awesome-font-awesome.min.css">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-B99XD3HGG8"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-B99XD3HGG8');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <nav class="navbar navbar-expand-lg fixed-top py-3 navbar-light" id="mainNav">
        <div class="container"> 
            <a class="navbar-brand" href="/">
                        <span>SingBox Windows</span>
                        </a>
            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarResponsive" aria-controls="navbarResponsive" aria-expanded="false" aria-label="Toggle navigation"> <span class="navbar-toggler-icon"></span> </button>
            <div class="collapse navbar-collapse" id="navbarResponsive">
                <ul class="navbar-nav ml-auto">
                                        <li class="nav-item"> <a class="nav-link" href="/">首页</a> </li>
                                        <li class="nav-item"> <a class="nav-link" href="/free-nodes/">免费节点</a> </li>
                                        <li class="nav-item"> <a class="nav-link" href="/paid-subscribe/">推荐机场</a> </li>
                                        <li class="nav-item"> <a class="nav-link" href="/client.htm">客户端</a> </li>
                                        <li class="nav-item"> <a class="nav-link" href="/news/">新闻资讯</a> </li>
                                    </ul>
            </div>
        </div>
    </nav>
    <main role="main">
        <div class="contact_header jumbotron text-center">
            <h1 class="display-4">vue 内置组件 component 的用法</h1>
            <p>
                <a href="/">首页</a> / <a href="/news/">新闻资讯</a> / <span>正文</span>
            </p>
        </div>
        <section class="bg-image-2 position-relative"> <img src="/assets/website/img/singboxwindows/mix-icons.png" alt="" class="bg-img-2">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                                        <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<div id="content_views" class="htmledit_views"> <h3><u><span style="color:#ff0000;">component is 内置组件切换方法一：</span></u></h3> <p>component组件（单独拿出一个组件来专门进行切换使用）</p> <p>使用is来绑定你的组件：如下面的reviewedPlan&nbsp; planDetailsList&nbsp; &nbsp;attachmentList等引入的组件名</p> <p>changeViewFun 是用来切换组件的方法 通过给is绑定的currentView来实现切换组件</p> <p>pathUrl就是当前的路由</p> <pre><code class="language-html"></code></pre> <pre class="has"><code class="language-html">&lt;template&gt;     &lt;div class="reviewed"&gt;         &lt;component             :is="currentView"             @changeview="changeViewFun"             :pathUrl="pathUrl"         &gt;&lt;/component&gt;     &lt;/div&gt; &lt;/template&gt; &lt;script&gt;      //引入三个需要切换的组件     import reviewedPlan from '../modules/reviewedPlan.vue';     import planDetailsList from './planDetailsList';     import attachmentList from './attachmentList.vue';     export default {         name: "reviewed",         data() {             return {                 currentView:'reviewedPlan',                 pathUrl:'',                 hrefIndex:"",             }         },         components: {             reviewedPlan,             planDetailsList,             attachmentList         },         created () {               this.hrefIndex=window.location.href.indexOf('jxjh')-1;               this.pathUrl=window.location.href.substring(this.hrefIndex);               if(this.$route.query.currentView){                   this.$route.query.currentView = this.$route.query.currentView===this.currentView?this.$route.query.currentView:this.currentView;               }           },         methods:{           //组件切换方法             changeViewFun(val){                 this.currentView = val;             }         },     } &lt;/script&gt; &lt;style lang="less" scoped&gt;     @import "~@/libs/less/theme/theme.less";  &lt;/style&gt;</code></pre> <p>每个切换的组件</p> <pre class="has"><code class="language-html">this.$emit("changeview","planDetailsList");  //父组件监听到changeview，给is绑定的currentView重新赋值 this.$router.push({        path: this.pathUrl,  //通过props接收  props:{pathUrl:String}        query: {           id: params.row.id,   //参数名           from:"reviewedPlan"  //这里加from原因是要区分多个组件的情况下通过路由from参数来区分是通过那个组件切换过来的        }  })</code></pre> <p>返回组件内部方法&nbsp; (点击返回的时候执行的操作)</p> <pre class="has"><code class="language-html">var url =  this.$route.query.from;  //取路由from，区分是那个通过那个组件传递过来的，返回的时候可返回到对应的组件 this.$emit("changeview",url); this.$router.push({       path: this.pathUrl,       query: {              currentView:url,         } })</code></pre> <h3><u><span style="color:#ff0000;">component is 内置组件切换方法二：</span></u></h3> <p>实现的结果是：组件A调转组件B，组件A里面有个查看按钮，点击查看，跳转到组件B，组件B里面点击返回跳转到组件A，使用component，从组件A跳到组件B，在组件B里面刷新之后还是停留在组件B，还有就是点击tab切换的时候也可以，点击那个tab，当前tab发请求。具体实现：</p> <p>1、封装routePlugin.js插件</p> <pre class="has"><code class="language-javascript">const addQuery=function(queryDate){     var query={};     Object.assign(query,this.$route.query,queryDate);     this.$router.push({         path:this.$route.path,         query:query     }); }; const delQuery=function(){     var query={};     var arg=Array.prototype.slice.call(arguments);     Object.assign(query,this.$route.query);     arg.forEach(item=&gt;{         delete query[item];//删除参数     })     this.$router.push({         path:this.$route.path,         query:query     }); }; var install = {     install(Vue) {         Vue.mixin({             beforeCreate() {                 var self=this;                 this.$routePlugin={                     addQuery:addQuery.bind(self),                     delQuery:delQuery.bind(self)                 }             }         })     } } export default install;</code></pre> <p>2、在main.js中注册到全局，<br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;import routePlugin from "./libs/js/vueExtend/routePlugin.js";</p> <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Vue.use(routePlugin); //修改参数方法</p> <p>3、在组件内部使用</p> <p>&nbsp; &nbsp; 说明：需要三个组件：第一个：component主控制组件、第二个：初始化组件内容、第三个：跳转过去的组件</p> <p>第一个：studentIndex.vue</p> <pre class="has"><code class="language-javascript">&lt;template&gt;     &lt;component         :is="viewName"         @updateView="updateView"     &gt;     &lt;/component&gt; &lt;/template&gt; &lt;script&gt;  import studentGrowthPortfolio from './studentGrowthPortfolio.vue';  //学生 index import fileDetails from './fileDetails.vue';  //成长档案 详情 export default {     data(){         return{             viewName:"studentGrowthPortfolio",         }     },     components:{         studentGrowthPortfolio,         fileDetails     },     mounted(){         this.viewName=this.$route.query.viewName?this.$route.query.viewName:this.viewName;     },     created () {     },     methods:{         /**          * 接收子组件数据          * @param data {Object}          * @return {Void} 无          */          updateView(name){              this.viewName = name              if(!name){                  this.$routePlugin.delQuery('viewName');              }else{                  this.$routePlugin.addQuery({viewName:name});              }          },     }, } &lt;/script&gt; &lt;style scoped lang="less"&gt;     @import "~@/libs/less/theme/theme.less";  &lt;/style&gt;</code></pre> <p>4、第二个：studentGrowthPortfolio.vue，点击查看需要执行的代码</p> <pre class="has"><code class="language-javascript">click: () =&gt; {         this.$emit("updateView","fileDetails");         this.$routePlugin.addQuery({                viewName:'fileDetails',                identity:'student'           })  }</code></pre> <p>5、第三个：fileDetails.vue，点击返回时需要执行的代码</p> <pre class="has"><code class="language-javascript">click:()=&gt;{      this.$emit('updateView', 'studentGrowthPortfolio') }</code></pre> <p>fileDetails.vue添加beforeDestoy，当离开当前组件时，销毁路由上的identity,和viewName参数</p> <p>beforeDestroy(){<!-- --></p> <p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; this.$routePlugin.delQuery('identity','viewName')</p> <p>&nbsp;},</p> <p>一切都ok了</p> </div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-96230.htm">国内十大宠物粮食品牌有哪些（国内宠物粮生产厂家）</a></p>
                                        <p>下一个：<a href="/news/article-96943.htm">一片枫叶的拼音怎么写的啊（一片枫叶的拼音怎么写的啊）</a></p>
                                    </div>
                                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-81569.htm" title="Vue路由router详细总结">Vue路由router详细总结</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-2-sing-box-node.htm" title="3月2日 | SingBox每天更新18.2M/S免费节点订阅链接">3月2日 | SingBox每天更新18.2M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-22-free-node-subscribe-links.htm" title="3月22日 | SingBox每天更新19.1M/S免费节点订阅链接">3月22日 | SingBox每天更新19.1M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-72098.htm" title="女猫咪高贵洋气的名字（女猫咪高贵洋气的名字关于吃的）">女猫咪高贵洋气的名字（女猫咪高贵洋气的名字关于吃的）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-4-13-sing-box-node-github.htm" title="4月13日 | SingBox每天更新18.8M/S免费节点订阅链接">4月13日 | SingBox每天更新18.8M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-96229.htm" title="宠物批发网站大全（宠物批发货源）">宠物批发网站大全（宠物批发货源）</a></li>
                        <li class="py-2"><a href="/news/article-86592.htm" title="宠物粮食批发市场兰州在哪里啊（兰州卖狗粮的地方）">宠物粮食批发市场兰州在哪里啊（兰州卖狗粮的地方）</a></li>
                        <li class="py-2"><a href="/news/article-80203.htm" title="领养宠物的平台名字怎么取（领养宠物网）">领养宠物的平台名字怎么取（领养宠物网）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-31-free-node-subscribe-links.htm" title="3月31日 | SingBox每天更新22.9M/S免费节点订阅链接">3月31日 | SingBox每天更新22.9M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-68829.htm" title=".NET宝藏API之：OutputFormatter，格式化输出对象">.NET宝藏API之：OutputFormatter，格式化输出对象</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">51</span> <a href="/date/2025-04/" title="2025-04 归档">2025-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">90</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </section>
                <footer class="pt-4 pb-5 bg-light position-relative">
            <div class="container">
                <div class="row">
                    <div class="col-md-12 mt-4">
                                            <p>
                                                <a href="/">首页</a> |
                                                <a href="/free-nodes/">免费节点</a> |
                                                <a href="/paid-subscribe/">推荐机场</a> |
                                                <a href="/client.htm">客户端</a> |
                                                <a href="/news/">新闻资讯</a> |
                                                <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
                        <a href="/">SingBox Windows免费节点订阅站</a> 版权所有 Powered by WordPress
                    </div>
                </div>
                <!--/.row-->
            </div>
            <!--/.container-->
        </footer>
        <script src="/assets/website/js/frontend/singboxwindows/jquery-3.5.1.min.js"></script>
        <script src="https://cdn.bootcdn.net/ajax/libs/popper.js/1.14.7/umd/popper.min.js" integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1" crossorigin="anonymous"></script>
        <script src="https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/4.3.1/js/bootstrap.min.js" integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM" crossorigin="anonymous"></script>
        <script src="/assets/website/js/frontend/singboxwindows/app.js"></script>
        <script src="/assets/website/js/frontend/G.js"></script>
    </main>
</body>

</html>