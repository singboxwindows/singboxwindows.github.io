<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://singboxwindows.github.io/news/article-27441.htm" />
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>promise和async/await区别</title>
        <meta name="description" content="拓展：js中同步、异步  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;js的同步和异步问题通常是指ajax的回调，如果是同步调用，程序在发出ajax" />
        <link rel="icon" href="/assets/website/img/singboxwindows/favicon.ico" type="image/x-icon"/>
    <link rel="stylesheet" href="/assets/website/css/singboxwindows/app.css">
    <link href="https://fonts.googleapis.com/css?family=Nunito:300,400,500,600,700,800,900&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://maxcdn.icons8.com/fonts/line-awesome/1.1/css/line-awesome-font-awesome.min.css">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-B99XD3HGG8"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-B99XD3HGG8');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <nav class="navbar navbar-expand-lg fixed-top py-3 navbar-light" id="mainNav">
        <div class="container"> 
                        <a class="navbar-brand" href="/">Sing Box Windows</a>
                        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarResponsive" aria-controls="navbarResponsive" aria-expanded="false" aria-label="Toggle navigation"> <span class="navbar-toggler-icon"></span> </button>
            <div class="collapse navbar-collapse" id="navbarResponsive">
                <ul class="navbar-nav ml-auto">
                                        <li class="nav-item"> <a class="nav-link" href="/">首页</a> </li>
                                        <li class="nav-item"> <a class="nav-link" href="/free-nodes/">免费节点</a> </li>
                                        <li class="nav-item"> <a class="nav-link" href="/paid-subscribe/">推荐机场</a> </li>
                                        <li class="nav-item"> <a class="nav-link" href="/news/">新闻资讯</a> </li>
                                        <li class="nav-item"> <a class="nav-link" href="#">关于</a> </li>
                    <li class="nav-item"> <a class="nav-link" href="#">联系</a> </li>
                </ul>
            </div>
        </div>
    </nav>
    <main role="main">
        <div class="contact_header jumbotron text-center">
            <h1 class="display-4">promise和async/await区别</h1>
            <p>
                <a href="/">首页</a> / <a href="/news/">新闻资讯</a> / <span>正文</span>
            </p>
        </div>
        <section class="bg-image-2 position-relative"> <img href="/assets/website/img/singboxwindows/mix-icons.png" alt="" class="bg-img-2">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                                        <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<div id="content_views" class="htmledit_views"> <p>拓展：js中同步、异步</p> <p> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;js的同步和异步问题通常是指ajax的回调，如果是同步调用，程序在发出ajax调用后就会暂停，直到远程服务器产生回应后才会继续运行。而如果是异步调用，程序发出ajax调用后不会暂停，而是立即执行后面的代码，服务器返回信息后会自动触发回调函数进行处理。</p> <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;相比较而言，异步调用的性能最佳，程序不会出现卡顿的现象，而同步调用则通常用于需要立即获得结果并实时处理的情况。</p> <p><strong>promise的用法</strong><br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Promise,简单来说就是一个容器，里面保存着某个未来才会结束的时间(通常是一个异步操作的结果)</p> <p><strong>基本语法：</strong></p> <pre><code class="language-javascript"> let p = new Promise((resolve,reject) =&gt; {         //...         resolve('success')     });          p.then(result =&gt; {         console.log(result);//success     });</code></pre> <p><strong>promise共有三个状态：</strong><br /> pending（执行中）、success（成功）、rejected（失败）</p> <p><strong>链式调用<br /> 错误捕获</strong><br /> Promise.prototype.catch用于指定Promise状态变为rejected时的回调函数，可以认为是.then的简写形势，返回值跟.then一样</p> <pre><code class="language-javascript">`let p = new Promise((resolve,reject) =&gt; {     reject('error'); });  p.catch(result =&gt; {     console.log(result); })`</code></pre> <p><strong>async、await</strong><br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;简洁：异步编程的最高境界就是不关心它是否是异步。async、await很好的解决了这一点，将异步强行转换为同步处理。<br /> async/await与promise不存在谁代替谁的说法，因为async/await是寄生于Promise，Generater的语法糖。</p> <p><strong>用法</strong><br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;async用于申明一个function是异步的，而await可以认为是async wait的简写，等待一个异步方法执行完成。</p> <p><strong>规则：</strong></p> <ol> <li>async和await是配对使用的，await存在于async的内部。否则会报错</li> <li>await表示在这里等待一个promise返回，再接下来执行</li> <li>await后面跟着的应该是一个promise对象，（也可以不是，如果不是接下来也没什么意义了…）</li> </ol> <p><strong>写法：</strong></p> <pre><code class="language-javascript">async function demo() { let result01 = await sleep(100); //上一个await执行之后才会执行下一句 let result02 = await sleep(result01 + 100); let result03 = await sleep(result02 + 100); // console.log(result03); return result03; }</code></pre> <pre><code class="language-javascript">demo().then(result =&gt; {     console.log(result); });`</code></pre> <h2>错误捕获</h2> <p>如果是reject状态，可以用try-catch捕捉</p> <pre><code class="language-javascript">let p = new Promise((resolve,reject) =&gt; {     setTimeout(() =&gt; {         reject('error');     },1000); });  async function demo(params) {     try {         let result = await p;     }catch(e) {         console.log(e);     } }  demo();</code></pre> </h1> <p>1 promise是ES6，async/await是ES7<br /> 2 async/await相对于promise来讲，写法更加优雅<br /> 3 reject状态：<br /> &nbsp; &nbsp; 1）promise错误可以通过catch来捕捉，建议尾部捕获错误，<br /> &nbsp; &nbsp; 2）async/await既可以用.then又可以用try-catch捕捉</p> </div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-26977.htm">动物疫苗是有毒有害吗为什么要打（动物疫苗对人体有害吗）</a></p>
                                        <p>下一个：<a href="/news/article-27442.htm">学宠物美容有前途吗男生（男的学宠物美容怎么样）</a></p>
                                    </div>
                                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-21425.htm" title="北京宠物疫苗哪里打（北京宠物疫苗哪里打便宜）">北京宠物疫苗哪里打（北京宠物疫苗哪里打便宜）</a></li>
                        <li class="py-2"><a href="/news/article-33591.htm" title="猫挠出血不打针有事吗（猫挠出血不打针有事吗科普）">猫挠出血不打针有事吗（猫挠出血不打针有事吗科普）</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-28-sing-box-node-windows.htm" title="11月28日 | SingBox每天更新20.4M/S免费节点订阅链接">11月28日 | SingBox每天更新20.4M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-23-latest-sing-box-node.htm" title="12月23日 | SingBox每天更新21M/S免费节点订阅链接">12月23日 | SingBox每天更新21M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-10-24-free-subscribe-node.htm" title="10月24日 | SingBox每天更新21.8M/S免费节点订阅链接">10月24日 | SingBox每天更新21.8M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-10-22-free-node-subscribe-links.htm" title="10月22日 | SingBox每天更新19M/S免费节点订阅链接">10月22日 | SingBox每天更新19M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-10-5-node-share-links.htm" title="10月5日 | SingBox每天更新22.7M/S免费节点订阅链接">10月5日 | SingBox每天更新22.7M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-31-sing-box-node-github.htm" title="12月31日 | SingBox每天更新19.4M/S免费节点订阅链接">12月31日 | SingBox每天更新19.4M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-8-sing-box-node-share.htm" title="11月8日 | SingBox每天更新19.4M/S免费节点订阅链接">11月8日 | SingBox每天更新19.4M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-9-4-free-subscribe-node.htm" title="9月4日 | SingBox每天更新22.7M/S免费节点订阅链接">9月4日 | SingBox每天更新22.7M/S免费节点订阅链接</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">3</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">92</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">34</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">31</span> <a href="/date/2024-10/" title="2024-10 归档">2024-10</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">30</span> <a href="/date/2024-09/" title="2024-09 归档">2024-09</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">31</span> <a href="/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">2</span> <a href="/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </section>
                <footer class="pt-4 pb-5 bg-light position-relative">
            <div class="container">
                <div class="row">
                    <div class="col-md-12 mt-4">
                    <p>
                        <a href="/">首页</a> | 
                        <a href="/free-node/">免费节点</a> | 
                        <a href="/news/">新闻资讯</a> |
                        <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
                        <a href="/">SingBox Windows免费节点订阅站</a> 版权所有 Powered by WordPress
                    </div>
                </div>
                <!--/.row-->
            </div>
            <!--/.container-->
        </footer>
        <script src="/assets/website/js/frontend/singboxwindows/jquery-3.5.1.min.js"></script>
        <script src="https://cdn.bootcdn.net/ajax/libs/popper.js/1.14.7/umd/popper.min.js" integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1" crossorigin="anonymous"></script>
        <script src="https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/4.3.1/js/bootstrap.min.js" integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM" crossorigin="anonymous"></script>
        <script src="/assets/website/js/frontend/singboxwindows/app.js"></script>
        <script src="/assets/website/js/frontend/G.js"></script>
    </main>
</body>

</html>