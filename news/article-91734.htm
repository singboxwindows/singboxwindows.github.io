<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://singboxwindows.github.io/news/article-91734.htm" />
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Python 函数进阶-递归函数_在线工具</title>
        <meta name="description" content="什么是递归函数 如果一个函数，可以自己调用自己，那么这个函数就是一个递归函数。 递归，递就是去，归就是回，递归就是一去一回的过程。  递归函数的条件 一般来说，递归需要边界条件，整个递归的结构中要有递" />
        <link rel="icon" href="/assets/website/img/singboxwindows/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="SingBox Windows免费节点订阅站">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://singboxwindows.github.io/news/article-91734.htm" />
    <meta property="og:site_name" content="SingBox Windows免费节点订阅站" />
    <meta property="og:title" content="Python 函数进阶-递归函数_在线工具" />
    <meta property="og:image" content="https://singboxwindows.github.io/uploads/20240731/7c66a0be20a3eaf0ff726844be28915c.webp" />
        <meta property="og:release_date" content="2025-04-09T09:16:32" />
    <meta property="og:updated_time" content="2025-04-09T09:16:32" />
        <meta property="og:description" content="什么是递归函数 如果一个函数，可以自己调用自己，那么这个函数就是一个递归函数。 递归，递就是去，归就是回，递归就是一去一回的过程。  递归函数的条件 一般来说，递归需要边界条件，整个递归的结构中要有递" />
        
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="Python 函数进阶-递归函数_在线工具">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">

    <link rel="stylesheet" href="/assets/website/css/singboxwindows/app.css">
    <link href="https://fonts.googleapis.com/css?family=Nunito:300,400,500,600,700,800,900&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://maxcdn.icons8.com/fonts/line-awesome/1.1/css/line-awesome-font-awesome.min.css">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-B99XD3HGG8"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-B99XD3HGG8');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <nav class="navbar navbar-expand-lg fixed-top py-3 navbar-light" id="mainNav">
        <div class="container"> 
            <a class="navbar-brand" href="/">
                        <span>SingBox Windows</span>
                        </a>
            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarResponsive" aria-controls="navbarResponsive" aria-expanded="false" aria-label="Toggle navigation"> <span class="navbar-toggler-icon"></span> </button>
            <div class="collapse navbar-collapse" id="navbarResponsive">
                <ul class="navbar-nav ml-auto">
                                        <li class="nav-item"> <a class="nav-link" href="/">首页</a> </li>
                                        <li class="nav-item"> <a class="nav-link" href="/free-nodes/">免费节点</a> </li>
                                        <li class="nav-item"> <a class="nav-link" href="/paid-subscribe/">推荐机场</a> </li>
                                        <li class="nav-item"> <a class="nav-link" href="/client.htm">客户端</a> </li>
                                        <li class="nav-item"> <a class="nav-link" href="/news/">新闻资讯</a> </li>
                                    </ul>
            </div>
        </div>
    </nav>
    <main role="main">
        <div class="contact_header jumbotron text-center">
            <h1 class="display-4">Python 函数进阶-递归函数_在线工具</h1>
            <p>
                <a href="/">首页</a> / <a href="/news/">新闻资讯</a> / <span>正文</span>
            </p>
        </div>
        <section class="bg-image-2 position-relative"> <img src="/assets/website/img/singboxwindows/mix-icons.png" alt="" class="bg-img-2">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                                        <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				</h1> <h3 id="什么是递归函数">什么是递归函数</h3> <p>如果一个函数，可以自己调用自己，那么这个函数就是一个递归函数。</p> <p>递归，递就是去，归就是回，递归就是一去一回的过程。</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220507/1e744bc235881c0b2b0f490dba00e8b1.jpg" alt="Python 函数进阶-递归函数_在线工具"></p> <h3 id="递归函数的条件">递归函数的条件</h3> <p>一般来说，递归需要<strong>边界条件</strong>，整个递归的结构中要有<strong>递归前进段</strong>和<strong>递归返回段</strong>。当边界条件不满足，递归前进，反之递归返回。就是说递归函数一定需要有边界条件来控制递归函数的前进和返回。</p> <h3 id="定义一个简单的递归函数">定义一个简单的递归函数</h3> <pre><code class="language-python"># 定义一个函数 def recursion(num): 	     print(num) 	if num == 0: 		return 'ok' 	     # 这个函数在自己的作用域中调用自己，这个函数就是一个递归函数 	recursion(num-1)   recursion(10) """ 结果： 10 9 8 7 6 5 4 3 2 1 0 """ </code></pre> <h4 id="代码解析">代码解析</h4> <p>我们执行这个函数，参数给了一个10，但是这个函数执行的过程中，又调用了自己，所以现在这个函数就会进入先执行第二次调用自己的过程中，第一次的调用就暂时的阻断了；</p> <p>第二次调用的时候，num-1，参数就变成了9，继续执行，然后就又执行到了调用自己的代码中，现在就会执行第三次调用的过程中，第二次的调用也阻断了；</p> <p>这就是 递 的过程；</p> <p>…………</p> <p>第十一次调用的时候，num-1，层层的嵌套，参数就变成了0，就符合了作用域中的<code>if num == 0</code>的条件判断式，第十一次的调用就没有再执行到了调用自己的代码，而是彻彻底底的执行完成了 ，然后代码的执行就又回到了第十次的函数调用中。</p> <p>第十次的函数调用阻断的时候是执行到了<code>recursion(num-1)</code>，但是这一行代码执行完了，也就是第十一次调用执行完了，并且后面也没有任何代码，所以第十次调用也结束了，然后就回到了第九次调用；然后第八次；再就是第七次，一直到第一次结束，整个函数的执行就结束了；</p> <p>这就是 归 的过程。</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220507/bb87e0e4b3ff9fd15739b10fc2450902.jpg" alt="Python 函数进阶-递归函数_在线工具"></p> <h3 id="内存栈区堆区">内存栈区堆区</h3> <p>栈区空间就是我们常说的栈，栈是一个有去有回，先进后出后出的空间，就像我们上面的例子中讲的，我们最先执行的是函数的第一次调用，但是第一次调用却是最后执行释放掉的，而第十一次调用是最后调用，最先执行释放掉的，这就是先进后出。与栈空间概念相违背的是队列空间，队列空间是一个有去有回，先进先出的空间，就像我们平时排队一样，先排队的会比后来的人先买到票，之后我们学习并发的时候，我们会详细的讲述队列的概念。</p> <p>单独的讲栈堆就是一种数据结构，栈是先进后出的一种数据结构，堆是排序后的一种树状数据结构。</p> <p>栈区堆区是内存空间，栈区就是按照先进后出的数据结构，无论创建或销毁都是自动为数据分配内存，释放内存，这是系统自动创建的；堆区就是按照排序后的树状数据结构，可优先取出必要的数据，无论创建或者销毁都是手动分配内存，释放内存，这是编程工作者手动编程出来的。</p> <table> <thead> <tr> <th>内存空间</th> <th>特点</th> </tr> </thead> <tbody> <tr> <td>内存中的栈区</td> <td>自动分配，自动释放</td> </tr> <tr> <td>内存中的堆区</td> <td>手动分配，手动释放</td> </tr> </tbody> </table> <p>运行程序时在内存中执行，会因为数据类型的不同而在内存的不同区域运行，因不同语言对内存划分的机制不一，当大体来说，有如下四大区域：</p> <ol> <li>栈区：分配局部变量空间；</li> <li>堆区：是用于手动分配程序员申请的内存空间；</li> <li>静态区：又称之为全局栈区，分配静态变量，全局变量空间；</li> <li>代码区：又称之为只读区、常量区，分配常量和程序代码空间；</li> </ol> <p>上面的栈区、读取、静态区、代码区都只是内存中的一段空间。</p> <h3 id="死递归">死递归</h3> <p>所以我们在使用递归函数的时候要注意，递归函数调用的过程就是一个开辟栈和释放栈的过程，调用的时候开辟栈空间，结束的时候释放栈空间，所以说，如果开辟的空间不结束就会一直存在，就会一直占用内存空间，但是栈空间是一个先进后出的空间，如果新开启的空间不释放掉，之前的空间也不会释放掉的，那么如果我们开辟的空间很多很多，但是又释放不掉，那么我们弱小的内存是否有足够的空间容纳得下这么多的栈呢？如果容纳不下，那么我们的计算机就会爆炸，所以我们在使用递归的时候要注意避免这种情况。尤其是死递归。</p> <p>每次调用函数时，在内存宗都会单独开辟一个空间，配合函数运行，这个空间叫做栈帧空间。</p> <p>1、递归是一去一回的过程，调用函数时，会开辟栈帧空间，函数执行结束之后，会释放栈帧空间，递归实际上就是不停地开辟和释放栈帧空间的过程，每次开辟栈帧空间，都是独立的一份，其中的资源不共享。</p> <p>2、触发回的过程当最后一层栈帧空间全部执行结束的时候，会触底反弹，回到上一层空间的调用处，遇到return，会触底反弹，回到上一层的调用处</p> <p>3、写递归时，必须给予递归跳出的条件，否则会发生内存溢出，可能会出现死机的情况，所以当递归的层数过多的时候，不建议使用递归。</p> <p>Python中的环境递归的层数默认为1000层左右，一般都是996层。</p> <pre><code class="language-python"># 下面的递归函数没有跳出递归的条件，所以是一个死递归，执行看，是不是1000左右。 def recursion(num): 	print(num) 	recursion(num+1)  recursion(1) </code></pre> <h3 id="尾递归">尾递归</h3> <p>简单的来说，在函数返回的时候，调用其本身，并且return语句不包含表达式，这样的一个递归函数就是一个尾递归函数。</p> <p>换句话说返回的东西就是函数本身就是尾递归函数，而递归函数只是自身调用了自身而已。</p> <p>一般情况下，尾递归的计算在参数中完成。</p> <p>我们开始的举例是一个尾递归函数吗？不是，因为那个例子这是调用了自己本省，但是并没有返回，所以还是一个普通的递归函数而已。</p> <p>使用递归的时候，我们通常在一些技术博客上看到一些关于尾递归优化的东西，这是因为尾递归无论调用多少次函数，都只会占用一份空间，只开辟一个栈帧空间，但是目前 cpython 不支持，然而最常见的解释器就是 cpython 。</p> <blockquote> <p>Python常见的解释器：cpython、pypy、jpython。</p> </blockquote> <p>尾递归相比普通递归的优点就是返回值不需要额外过多的运算。</p> <h4 id="实例">实例</h4> <p><strong>阶乘计算</strong></p> <p>一个正整数的阶乘是所有小于及等于该数的正整数的积，并且0的阶乘为1。</p> <pre><code class="language-python">""" 循环计算 """ def factorial(num):    if num == 0:       return 1    elif num &lt; -1:       return '只能是零和正整数'    count = 1    for i in range(1, num+1):       count *= i    return count  res = factorial(5) print(res)  # 120   """ 使用普通递归 """ def factorial(num):    if num == 0:       return 1    elif num &lt; -1:       return '只能是零和正整数'    elif num == 1:       return num    return num * factorial(num-1)   # 普通函数返回的是一个表达式  res = factorial(5) print(res)  # 120   """ 使用尾递归 """ def factorial(num, count=1):    if num == 0:       return 1    elif num &lt; -1:       return '只能是零和正整数'    elif num == 1:       return count    return factorial(num-1, count*num)   # 尾递归返回的是一个函数，计算式在参数中运算  res = factorial(5) print(res)  # 120 </code></pre> <p><strong>斐波那契数列</strong></p> <p>斐波那契数列是以0、1两个数开头，从这个数列从第3个数开始，每一个数都等于前两树之和。</p> <pre><code class="language-python"># 使用循环解决 def fibonacci(num):    x, y = 0, 1     if num &lt; 1:       return '输入大于0的数字'    elif num == 1:       return 0    elif num == 2:       return 1     for _ in range(num-2):       x, y = y, y+x    return y  res = fibonacci(9) print(res)  # 21   """ 使用普通递归 """ def fibonacci(num):    if num &lt; 1:       return '输入大于0的数字'    elif num == 1:       return 0    elif num == 2:       return 1     return fibonacci(num-1) + fibonacci(num-2)  res = fibonacci(9) print(res)  # 21   """ 使用尾递归 """ def fibonacci(num, x=0, y=1):    if num &lt; 1:       return '输入大于0的数字'    elif num == 1:       return x    elif num == 2:       return y     return fibonacci(num-1, x=y,  y=(x+y))  res = fibonacci(9) print(res)  # 21 </code></pre> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-91476.htm">哪里可以买狗粮（在哪里买狗粮便宜又好）</a></p>
                                        <p>下一个：<a href="/news/article-91736.htm">开宠物医院的基本要求有哪些（开宠物医院的流程）</a></p>
                                    </div>
                                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2025-3-3-node-share-links.htm" title="3月3日 | SingBox每天更新21.3M/S免费节点订阅链接">3月3日 | SingBox每天更新21.3M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-68830.htm" title="动物疫苗的种类和制备原理是什么呢 动物疫苗的种类和制备原理是什么呢英语">动物疫苗的种类和制备原理是什么呢 动物疫苗的种类和制备原理是什么呢英语</a></li>
                        <li class="py-2"><a href="/news/article-74758.htm" title="1-3月小猫如何喂养（3个月的幼猫喂养方法）">1-3月小猫如何喂养（3个月的幼猫喂养方法）</a></li>
                        <li class="py-2"><a href="/news/article-83718.htm" title="2021年河南动物疫苗中标公告公布时间（河南省2021年动物疫苗中标公告）">2021年河南动物疫苗中标公告公布时间（河南省2021年动物疫苗中标公告）</a></li>
                        <li class="py-2"><a href="/news/article-72765.htm" title="宠物粮食商标名字大全（宠物粮食品牌起名大全）">宠物粮食商标名字大全（宠物粮食品牌起名大全）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-4-6-sing-box-node-share.htm" title="4月6日 | SingBox每天更新18M/S免费节点订阅链接">4月6日 | SingBox每天更新18M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-2-sing-box-node.htm" title="3月2日 | SingBox每天更新18.2M/S免费节点订阅链接">3月2日 | SingBox每天更新18.2M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-72098.htm" title="女猫咪高贵洋气的名字（女猫咪高贵洋气的名字关于吃的）">女猫咪高贵洋气的名字（女猫咪高贵洋气的名字关于吃的）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-12-node-share-links.htm" title="3月12日 | SingBox每天更新22.3M/S免费节点订阅链接">3月12日 | SingBox每天更新22.3M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-79538.htm" title="springboot项目中访问druid内置监控页面">springboot项目中访问druid内置监控页面</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">33</span> <a href="/date/2025-04/" title="2025-04 归档">2025-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">90</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </section>
                <footer class="pt-4 pb-5 bg-light position-relative">
            <div class="container">
                <div class="row">
                    <div class="col-md-12 mt-4">
                                            <p>
                                                <a href="/">首页</a> |
                                                <a href="/free-nodes/">免费节点</a> |
                                                <a href="/paid-subscribe/">推荐机场</a> |
                                                <a href="/client.htm">客户端</a> |
                                                <a href="/news/">新闻资讯</a> |
                                                <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
                        <a href="/">SingBox Windows免费节点订阅站</a> 版权所有 Powered by WordPress
                    </div>
                </div>
                <!--/.row-->
            </div>
            <!--/.container-->
        </footer>
        <script src="/assets/website/js/frontend/singboxwindows/jquery-3.5.1.min.js"></script>
        <script src="https://cdn.bootcdn.net/ajax/libs/popper.js/1.14.7/umd/popper.min.js" integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1" crossorigin="anonymous"></script>
        <script src="https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/4.3.1/js/bootstrap.min.js" integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM" crossorigin="anonymous"></script>
        <script src="/assets/website/js/frontend/singboxwindows/app.js"></script>
        <script src="/assets/website/js/frontend/G.js"></script>
    </main>
</body>

</html>